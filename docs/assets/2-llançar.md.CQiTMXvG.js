import{_ as a,c as i,o as e,a0 as n}from"./chunks/framework.1mQF75MJ.js";const k=JSON.parse('{"title":"2. Llançar excepcions (throw)","description":"","frontmatter":{},"headers":[],"relativePath":"2-llançar.md","filePath":"2-llançar.md"}'),t={name:"2-llançar.md"};function l(p,s,r,o,h,c){return e(),i("div",null,s[0]||(s[0]=[n(`<h1 id="_2-llancar-excepcions-throw" tabindex="-1">2. Llançar excepcions (throw) <a class="header-anchor" href="#_2-llancar-excepcions-throw" aria-label="Permalink to &quot;2. Llançar excepcions (throw)&quot;">​</a></h1><h2 id="_2-1-per-que-llancar-excepcions" tabindex="-1">2.1. Per què llançar excepcions? <a class="header-anchor" href="#_2-1-per-que-llancar-excepcions" aria-label="Permalink to &quot;2.1. Per què llançar excepcions?&quot;">​</a></h2><p>Un programador pot programar el seu codi de manera que es llancen excepcions quan s&#39;intente fer una cosa incorrecta o inesperada (a vegades és recomanable). Per exemple, quan els arguments que se li passen a un mètode no són correctes o no compleixen uns certs criteris. Això és habitual en la Programació Orientada a Objectes (POO): Recordeu que una classe ha de ser la responsable de la lògica dels seus objectes: assegurar que les dades siguen vàlides, a més de controlar què està permés i què no està permés fer. <strong>Per exemple, si s&#39;instancia una classe amb valors incorrectes</strong> com un objecte Persona amb un DNI no vàlid, una edat negativa, un compte bancari amb saldo negatiu, etc. En aqueixos casos <strong>és convenient que el constructor llance una excepció</strong>.</p><p>També <strong>pot ser apropiat llançar excepcions en els setters</strong> si el valor no és vàlid, <strong>i en qualsevol altre mètode en el qual s&#39;intente fer una cosa no permesa o que viole la integritat de l&#39;objecte</strong>, com per exemple retirar diners d&#39;un compte sense saldo suficient.</p><div class="warning custom-block github-alert"><p class="custom-block-title"><strong>ATENCIÓ!:</strong></p><p>S’ha de tindre en compte que <strong>les excepcions poden manejar-se i controlar-se sense que el programa es pare</strong> (en l&#39;apartat 3 s&#39;explica com).</p><p>És a dir, llançar una excepció no implica necessàriament que el programa acabarà, és simplement una manera d&#39;avisar d&#39;un error. <strong>Qui cride al mètode és responsable de manejar l&#39;excepció perquè el programa no es pare</strong>.</p></div><h2 id="_2-2-com-llancar-una-excepcio" tabindex="-1">2.2. Com llançar una excepció <a class="header-anchor" href="#_2-2-com-llancar-una-excepcio" aria-label="Permalink to &quot;2.2. Com llançar una excepció&quot;">​</a></h2><p>Per a llançar l&#39;excepció s&#39;utilitza la paraula reservada <code>throw</code> seguit d&#39;un objecte de tipus <strong><i>Exception</i></strong> (o alguna de les seues subclasses com <i>ArithmeticException, NumberFormatException, ArrayIndexOutOfBoundsException</i>, etc.). Com les excepcions són objectes, deuen instanciar-se amb <code>new</code>. Per tant, <strong>podem llançar una excepció genèrica així</strong>:</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Exception</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><p>Això és equivalent a primer instanciar l&#39;objecte <i>Exception</i> i després llançar-lo:</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Exception e </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Exception</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">throw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> e;</span></span></code></pre></div><p>El constructor de <i>Exception</i> permet (opcionalment) un argument <code>String</code> per a donar detalls sobre el problema. Si l&#39;excepció no es maneja i el programa es para, el missatge d&#39;error es mostrarà per la consola (això és molt útil per a depurar programes).</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Exception</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;L&#39;edat no pot ser negativa&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>En lloc de llançar excepcions genèriques (<i>Exception</i>), també és possible llançar excepcions específiques de Java com per exemple <i>ArrayIndexOutOfBoundsException, ArithmeticException, NumberFormatException</i>, etc. A Java totes les classes d&#39;excepcions hereten de <i>Exception</i>.</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> NumberFormatException</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;...&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><div class="warning custom-block github-alert"><p class="custom-block-title"><strong>ATENCIÓ!:</strong></p><p>En lloc de llançar excepcions pròpies de Java (<i>ArithmeticException, NumberFormatException, ArrayIndexOutOfBoundsException</i>, etc.) <strong>normalment és preferible llançar excepcions genèriques ‘Exception’ o millor encara, utilitzar les nostres pròpies excepcions</strong> (apartat 5).</p></div><h2 id="_2-3-indicar-l-excepcio-en-la-capcalera-del-metode" tabindex="-1">2.3. Indicar l&#39;excepció en la capçalera del mètode <a class="header-anchor" href="#_2-3-indicar-l-excepcio-en-la-capcalera-del-metode" aria-label="Permalink to &quot;2.3. Indicar l&#39;excepció en la capçalera del mètode&quot;">​</a></h2><p><strong>És obligatori indicar en la capçalera del mètode que pot llançar excepcions</strong>. Per a això s’ha d’afegir, a la dreta de la capçalera i abans de les claus, la paraula reservada <code>throws</code> seguit de la <strong>mena d&#39;excepció</strong> que pot llançar (si pot llançar diferents tipus d&#39;excepcions deuen indicar-se totes separades per comes).</p><p>Per exemple, vegem el mètode <i>setEdat(int edat)</i> de la classe <i>Persona</i>. Com hem decidit que l&#39;edat d&#39;una persona no pot ser negativa, llançarem una excepció si edat &lt; 0.</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Setter de l&#39;atribut edat. Ha de ser &gt;= 0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setEdat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> edat) throws Exception {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (edat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Exception</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Edat negativa no permesa&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    else</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.edat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> edat;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Cal tindre en compte que <strong>en llançar una excepció es pararà l&#39;execució d&#39;aquest mètode (no s&#39;executarà la resta del codi del mètode) i es llançarà l&#39;excepció al mètode que el va cridar</strong>. Si per exemple des de la funció <i>main</i> cridem a <i>setEdat()</i>, com pot succeir que <i>setEdat()</i> llance una excepció, llavors en la pràctica és possible que el <i>main</i> llance una excepció (no directament amb un <i>throw</i>, sinó per l&#39;excepció que ens llança <i>setEdat()</i>). Per tant, també hem d&#39;especificar en el <i>main</i> que es pot llançar una excepció:</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] args) throws Exception {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Persona p </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Persona</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;44193900L&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Pepito&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">27</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    p.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setEdat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(valor); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Pot llançar una excepció</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="_2-4-llancant-diferents-tipus-d-excepcions" tabindex="-1">2.4. Llançant diferents tipus d&#39;excepcions <a class="header-anchor" href="#_2-4-llancant-diferents-tipus-d-excepcions" aria-label="Permalink to &quot;2.4. Llançant diferents tipus d&#39;excepcions&quot;">​</a></h2><p><strong>Un mètode pot llançar diferents tipus d&#39;excepcions</strong> (si ho considerem necessari). En tal cas, <strong>cal especificar tots els tipus possibles en la capçalera, separats per comes</strong>. Per exemple, imaginem que el constructor de <i>Persona</i> pren com a arguments el dni i l&#39;edat, i volem llançar excepcions diferents segons cada cas.</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Persona</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String dni, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> edat) throws InvalidDniException, InvalidEdatException {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dni.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">matches</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;^[0-9]{8}[A-Z]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> InvalidDniException</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;DNI no vàlid: &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dni);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (edat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> InvalidEdatException</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Edat no vàlida: &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> edat);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.dni </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dni;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.edat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> edat;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="warning custom-block github-alert"><p class="custom-block-title"><strong>ATENCIÓ!:</strong></p><p>Compte: tingueu en compte que <i>InvalidEdatException</i> i <i>InvalidDniException</i> no són tipus d&#39;excepcions de Java, sinó excepcions pròpies que nosaltres hauríem definit a mida per al nostre programari (veure apartat 5).</p></div><h2 id="_2-5-les-excepcions-es-llancen-de-metode-a-metode-hot-potato" tabindex="-1">2.5. Les excepcions es llancen de mètode a mètode (“hot potato”) <a class="header-anchor" href="#_2-5-les-excepcions-es-llancen-de-metode-a-metode-hot-potato" aria-label="Permalink to &quot;2.5. Les excepcions es llancen de mètode a mètode (“hot potato”)&quot;">​</a></h2><p>Observeu que el llançament d&#39;excepcions es produeix recursivament a través de la seqüència de cridades a mètodes. Imaginem que en el mètode A cridem al mètode B, que crida al mètode C, etc. fins a arribar a E.</p><p>A → B → C → D → E (seqüència de crides de mètodes)</p><p>Si el mètode E llança una excepció, aquesta li arribarà a D que al seu temps li la llançarà a C, etc. recorrent el camí invers fins a arribar al mètode inicial A.</p><p>A ← B ← C ← D ← E (seqüència de llançament d&#39;excepcions)</p><p>Per tant, com tots aquests mètodes poden acabar llançant una excepció, en les seues capçaleres caldrà incloure el <code>throws Exception</code> (o el que corresponga segons el tipus d&#39;excepció).</p><div class="warning custom-block github-alert"><p class="custom-block-title"><strong>ATENCIÓ!:</strong></p><p><strong>Compte: no és recomanable deixar que les excepcions del nostre programari arriben de manera descontrolada fins al main i acaben el programa. El més ideal és manejar les excepcions</strong> com veurem en el següent apartat.</p></div>`,32)]))}const E=a(t,[["render",l]]);export{k as __pageData,E as default};
