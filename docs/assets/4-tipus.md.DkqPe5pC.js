import{_ as e,c as a,o as r,a4 as i}from"./chunks/framework.DvxGzD5L.js";const d="/UF9/uf9/Jerarquia_excepcions.jpg",x=JSON.parse(`{"title":"4. Jerarquia i tipus d'excepcions (Java)","description":"","frontmatter":{},"headers":[],"relativePath":"4-tipus.md","filePath":"4-tipus.md"}`),n={name:"4-tipus.md"};function o(s,t,c,p,l,u){return r(),a("div",null,t[0]||(t[0]=[i('<h1 id="_4-jerarquia-i-tipus-d-excepcions-java" tabindex="-1">4. Jerarquia i tipus d&#39;excepcions (Java) <a class="header-anchor" href="#_4-jerarquia-i-tipus-d-excepcions-java" aria-label="Permalink to &quot;4. Jerarquia i tipus d&#39;excepcions (Java)&quot;">​</a></h1><p>La classe Exception hereta de Throwable, i alhora, totes las excepcions hereten de Exception.</p><p><img src="'+d+'" alt="Jerarquia excepcions"></p><p>Com java.lang és importat de forma implícita en tots els programes, la major part de les excepcions derivades de RuntimeException estan disponibles de manera automàtica. A més no és necessari incloure-les en cap capçalera de mètode mitjançant throws.</p><p>Les Excepcions poden ser comprovades i no comprovades:</p><ul><li>Excepcions comprovades: aquelles que Java comprova durant la compilació, abans de l&#39;execució del programa.</li><li>Excepcions no comprovades: aquelles que Java no pot comprovar durant la compilació i es produiran durant l&#39;execució del programa.</li></ul><table tabindex="0"><thead><tr><th>Excepció</th><th>Significat</th></tr></thead><tbody><tr><td>ClassNotFoundException</td><td>No s&#39;ha trobat la classe.</td></tr><tr><td>CloneNotSupportedException</td><td>Intent de duplicat d&#39;un objecte que no implementa la interfície Clonable.</td></tr><tr><td>IllegalAccessException</td><td>S&#39;ha denegat l&#39;accés a una classe.</td></tr><tr><td>InstantiationException</td><td>Intent de crear un objecte d&#39;una classe abstracta o interfície.</td></tr><tr><td>InterruptedException</td><td>Fil interromput per un altre fil.</td></tr><tr><td>NoSuchFieldException</td><td>El camp sol·licitat no existeix.</td></tr><tr><td>NoSuchMethodException</td><td>El mètode sol·licitat no existeix.</td></tr></tbody></table><p>Les subclasses de RuntimeException no comprovades són:</p><table tabindex="0"><thead><tr><th>Excepció</th><th>Significat</th></tr></thead><tbody><tr><td>AritmeticException</td><td>Error aritmètic com a divisió entre zero</td></tr><tr><td>ArrayIndexOutOfBoundsException</td><td>Índex de la matriu fora del seu límit</td></tr><tr><td>ArrayStoreException</td><td>Assignació a una matriu de tipus incompatible</td></tr><tr><td>ClassCastException</td><td>Conversió invalida</td></tr><tr><td>IllegalArgumentException</td><td>Ús invàlid d&#39;un argument en cridar a un mètode</td></tr><tr><td>IllegalMonitorStateException</td><td>Operació de monitor invàlida, com esperar un fil no bloquejat</td></tr><tr><td>IllegalStateException</td><td>L&#39;entorn o aplicació estan en un estat incorrecte</td></tr><tr><td>IllegalThreadStateException</td><td>L&#39;operació sol·licitada és incompatible amb l&#39;estat actual del fil</td></tr><tr><td>IndexOutOfBoundException</td><td>Algun tipus d&#39;índex està fora del seu rang o del seu límit</td></tr><tr><td>NegativeArraySizeException</td><td>La matriu té una grandària negativa</td></tr><tr><td>NullPointerException</td><td>Ús incorrecte d&#39;una referència NULL</td></tr><tr><td>NumberFormatException</td><td>Conversió incorrecta d&#39;una cadena a un format numèric</td></tr><tr><td>SecurityException</td><td>Intent de violació de seguretat</td></tr><tr><td>StringIndexOutBounds</td><td>Intent de sobrepassar el límit d&#39;una cadena</td></tr><tr><td>TypeNotPresentException</td><td>Tipus no trobat</td></tr><tr><td>UnsupportedOperationException</td><td>Operació no admesa</td></tr></tbody></table><p>És interessant conèixer els diferents tipus d&#39;excepcions, però <strong>no és necessari saber-li-les de memòria ni entendre exactament quan es produeix cadascuna</strong>.</p><p>Encara que les excepcions que incorpora Java, gestionen la majoria dels errors més comuns, és probable que el programador preferisca crear els seus propis tipus d&#39;excepcions per a gestionar situacions específiques de les seues aplicacions. Tan sols cal definir una subclasse de Exception, que naturalment és subclasse de Throwable.</p>',11)]))}const E=e(n,[["render",o]]);export{x as __pageData,E as default};
